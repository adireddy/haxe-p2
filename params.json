{"name":"Haxe-p2","tagline":"Externs of p2.js for Haxe","body":"haxe-p2\r\n=======\r\n\r\n![haxe p2 logo](https://raw.githubusercontent.com/adireddy/haxe-p2/master/logo.png)\r\n\r\nExterns of p2.js for Haxe - A Javascript 2D physics library.\r\n\r\n### Installation ###\r\n\r\n```haxe\r\nhaxelib install p2js\r\n```\r\nPlease note that this is an alpha release and the development/testing is still in progress.\r\n\r\n### Usage ###\r\n\r\n```haxe\r\n\r\nimport pixi.display.Stage;\r\nimport pixi.primitives.Graphics;\r\nimport pixi.display.DisplayObjectContainer;\r\n\r\nimport p2.shapes.Circle;\r\nimport p2.shapes.Plane;\r\nimport p2.objects.Body;\r\nimport p2.shapes.Rectangle;\r\nimport p2.world.World;\r\n\r\nclass Main {\r\n\r\n\tvar _renderer:Dynamic;\r\n    var _stage:Stage;\r\n\r\n    var _p2World:World;\r\n    var _p2container:DisplayObjectContainer;\r\n    var _p2graphics:Graphics;\r\n    var _boxBody:Body;\r\n\r\n    var _p2Circle:Graphics;\r\n    var _circleShape:Circle;\r\n    var _p2Sensor:Graphics;\r\n    var _sensorShape:Circle;\r\n    var _circleBody:Body;\r\n    var _sensorBody:Body;\r\n\r\n    public function new() {\r\n        _stage = new Stage(0x00FF00);\r\n\t\t_renderer = Detector.autoDetectRenderer(800, 600);\r\n\t\tBrowser.document.body.appendChild(_renderer.view);\r\n        \t\t\r\n\t\t_p2World = new World({ gravity:[0, 0] });\r\n        \r\n        var boxShape:Rectangle = new Rectangle(2, 1);\r\n        _boxBody = new Body({\r\n            mass: 1,\r\n            position:[0, 2],\r\n            angularVelocity: 1\r\n        });\r\n\r\n        _boxBody.addShape(boxShape);\r\n        _p2World.addBody(_boxBody);\r\n\r\n        var planeShape:Plane = new Plane();\r\n        var planeBody:Body = new Body({ position:[0, -1] });\r\n        planeBody.addShape(planeShape);\r\n        _p2World.addBody(planeBody);\r\n\r\n        var zoom:Int = 100;\r\n\r\n        _p2container = new DisplayObjectContainer();\r\n        gameStage.addChild(_p2container);\r\n\r\n        _p2container.position.x = StageProperties.screenWidth / 2;\r\n        _p2container.position.y = StageProperties.screenHeight / 2;\r\n        _p2container.scale.x =  zoom;\r\n        _p2container.scale.y = -zoom;\r\n\r\n        _p2graphics = new Graphics();\r\n        _p2graphics.beginFill(0xff0000);\r\n        _p2graphics.drawRect(-boxShape.width / 2, -boxShape.height / 2, boxShape.width, boxShape.height);\r\n        _p2container.addChild(_p2graphics);\r\n\r\n        _circleShape = new Circle(1);\r\n        _circleBody = new Body({ mass: 1 });\r\n        _circleBody.damping = 0;\r\n        _circleBody.addShape(_circleShape);\r\n        _p2World.addBody(_circleBody);\r\n\r\n        _p2Circle = new Graphics();\r\n        _p2Circle.beginFill(0x003366);\r\n        _p2Circle.drawCircle(0, 0, _circleShape.radius);\r\n        _p2container.addChild(_p2Circle);\r\n        \r\n        Browser.window.requestAnimationFrame(cast animate);\r\n    }\r\n    \r\n    function animate() {\r\n\t\tBrowser.window.requestAnimationFrame(cast animate);\r\n\t\t_p2World.step(1/60);\r\n\t\t_p2graphics.position.x = _boxBody.position[0];\r\n\t\t_p2graphics.position.y = _boxBody.position[1];\r\n\t\t_p2graphics.rotation = _boxBody.angle;\r\n\t\t_renderer.render(_stage);\r\n    }\r\n}\r\n```\r\n\r\nThis content is released under the [MIT](http://opensource.org/licenses/MIT) License.\r\n\r\np2.js is maintained by [schteppe](https://github.com/schteppe).","google":"UA-31531781-2","note":"Don't delete this file! It's used internally to help with page regeneration."}